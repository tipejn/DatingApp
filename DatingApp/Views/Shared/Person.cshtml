@model Person

<h1>@(Model.Gender == Gender.Female ? "Kobieta" : "Mężczyzna")</h1>
<form asp-action="Next" method="post">
    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Imię")
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Height, "Wzrost")
        @Html.TextBoxFor(m => m.Height, new { @class = "form-control" })
        <small class="form-text text-muted">
            Proszę podać wzrost w metrach
        </small>
        <span asp-validation-for="Height" class="text-danger"></span>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BirthDate, "Data urodzenia")
        @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control" , @type = "date"})
        <span asp-validation-for="BirthDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BirthDate, "Kolor oczu")
        @Html.DropDownListFor(m => m.EyesColor, Html.GetEnumSelectList<EyesColor>(), new { @class = "form-control" })
    </div>
    <input type="hidden" asp-for="Gender" value="@Model.Gender" />
    <button type="submit" class="btn btn-primary">Dalej</button>
</form>